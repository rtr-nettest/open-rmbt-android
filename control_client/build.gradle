apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-ktlint.gradle"

android {

    compileSdkVersion config.targetSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api project(path: ':util')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    implementation "com.jakewharton.timber:timber:$versions.timber"

    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"

    api "com.squareup.retrofit2:retrofit:$versions.retrofit"
    api "com.squareup.retrofit2:converter-gson:$versions.retrofit"

    debugImplementation "com.facebook.stetho:stetho:$versions.stetho"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
    debugImplementation "com.squareup.okhttp3:logging-interceptor:$versions.logging_interceptor"

    implementation "com.google.android.gms:play-services-maps:$versions.google_services"

    testImplementation "junit:junit:$versions.junit"
}
